@model WebApplication8.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<link href="~/Scripts/css/selectsearch/select2.min.css" rel="stylesheet" />

<link href="~/assets/css/styleMultiSelect.css" rel="stylesheet" />
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("RegisterMultiRoles", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))

{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />


    @Html.ValidationSummary("", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.EmployeeId, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("EmployeeId", null, "-- Please select --", htmlAttributes: new { @class = "form-control selectCustomerGroup selectpicker  ", id = "EmployeeId" })
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="orm-group ">
        @Html.Label("Select Roles", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <span class="autocomplete-select"></span>
            @*<button onclick="resetAutocomplete()">Reset</button>*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control ", value = "", id = "PhoneNumber", autocomplete = "off" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mobile, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control ", value = "", id = "Mobile", autocomplete = "off" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control UserName", value = "", id = "UserName", autocomplete = "off" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>

    <div id="users"></div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



    <!--Select Search-->

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="~/Scripts/js/selectSearch/select2.min.js"></script>

    <!--Select Search-->
    <script>
        $("#EmployeeId").select2({
            placeholder: "Select Employee",
            allowClear: true
        });
    </script>




    <script src="~/assets/js/bundle.min.js"></script>


    <script>

        var array = @Html.Raw(Json.Encode(@ViewBag.Users));
        console.log(array);
        //for(var i =0; i<array.length;i++){
        //   sampleTags[i] = array[i];
        //}

        var autocomplete = new SelectPure(".autocomplete-select", {
            options: array,

            multiple: true,
            autocomplete: true,
            icon: "fa fa-times",
            onChange: value => {
                console.log(value);
                $("#users").empty();
                for (var i = 0; i < value.length; i++) {

                    var st = '<input type="hidden" name="UserRolesList[]" value="' + value[i] + '">';
                    $("#users").append(st);
                }
            },
            classNames: {
                select: "select-pure__select",
                dropdownShown: "select-pure__select--opened",
                multiselect: "select-pure__select--multiple",
                label: "select-pure__label",
                placeholder: "select-pure__placeholder",
                dropdown: "select-pure__options",
                option: "select-pure__option",
                autocompleteInput: "select-pure__autocomplete",
                selectedLabel: "select-pure__selected-label",
                selectedOption: "select-pure__option--selected",
                placeholderHidden: "select-pure__placeholder--hidden",
                optionHidden: "select-pure__option--hidden",
            }
        });
        var resetAutocomplete = function () {
            autocomplete.reset();
        };
    </script>
}


