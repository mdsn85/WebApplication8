@model WebApplication8.Models.CuttingSheet

@{
    ViewBag.Title = "Create";
}

<!--Select Search-->
<link href="~/Scripts/css/selectsearch/select2.min.css" rel="stylesheet" />




@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "CuttingSheetform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.code, @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", null, "Please select", htmlAttributes: new { @class = "form-control", @id = "ProjectId" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>






        <div class="form-group">
            <label for="CreateDate" class="col-md-2 control-label">Warranty</label>
            <div class="input-group date form_date col-md-5" data-date="" data-date-format="dd MM yyyy" data-link-field="CreateDate" data-link-format="yyyy-mm-dd">
                <input class="form-control" size="16" type="text" value="@ViewBag.date" readonly>
                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
            </div>
            <input type="hidden" id="CreateDate" name="CreateDate" value="@ViewBag.date" /><br />

            @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
        </div>




        <div class="form-group">

            @Html.Label("Upload Documents", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <p style="color:crimson">@ViewBag.message</p>

                @{ Html.RenderPartial("~/Views/UploadFile/UploadFileMulti.cshtml"); }
                <div style="padding: 10px 2px">
                    @foreach (var e in ViewBag.ext)
                    {
                        @Html.Raw(e + ", ");
                    }
                </div>
                @*display name of uploaded files*@


                @*hidden input (name is FileName ) conatin name of uploaded files to submit*@
                <div class="filesList" id="filesList"> </div>
            </div>
        </div>
        <br />
        <div class="form-group">

            <div class="card-content">
                <b>
                    <p class="control-label col-md-2">


                    </p>
                </b>
                <div class="table-responsive">
                    <div style="float: left;padding-left:10%">

                        <span class=" ">
                            <button id="calculate" type="button" onclick="openChild()" class="fa fa-plus-square">Add Material</button><br>
                            <br />
                        </span>

                        <input id="CustomerId" name="CustomerId" type="hidden" />
                        <div id="Customer"></div>

                    </div>
                    <table class="table-bordered table-responsive table dataTable text-nowrap" id="tbDetails">
                        <thead>
                            <tr>


                                <td>
                                    Sr #
                                </td>
                                <td>
                                    id
                                </td>
                                <td>
                                    Material
                                </td>
                                <td>
                                    Type
                                </td>
                                <td>
                                    Unit
                                </td>
                                <td>
                                    Request Qty
                                </td>


                                <td>
                                    delete
                                </td>
                            </tr>
                        </thead>
                        <tbody id="p_scents"></tbody>



                    </table>


                </div>
            </div>
        </div>

        <div class="form-group" style="margin-top : 5px">
            <div class="col-md-offset-4 col-md-2">

                <input type="button" id="btnSave" value="  Save  " class="btn btn-primary adminworkSaveBtn " />



            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <!--Select Search-->

    @*<script src="~/Scripts/js/jquery1.7.1Google.min.js"></script>*@
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>*@


    <!--Select Search-->




    <script>
        $(document).ready(function () {
            $("form").submit(function (e) {

                e.preventDefault(e);
            });


        });

        function validateForm() {
        }


        function openChild() {
            showModalPopUp('/Materials/IndexShort');

        }

    </script>




    <script>
        var scntDiv = $('#p_scents');
        var nextRaw = 0;

        function remove(rowId) {
            //Remove the TR element using JQuery's remove method.
            $('#' + rowId).fadeOut('slow', function () {
                $('#' + rowId).remove();

            });
            nextRaw = nextRaw - 1;
        }
    </script>


    <script>
        $("body").on("click", "#btnSave", function () {

            if (validateForm() != false) {
                //Loop through the Table rows and build a JSON array.
                //  var LpoHeader = new Array();
                var EnqueryId = 0;
                var Enquery = $('#CuttingSheetform').serialize();
                console.log(Enquery);
                console.log(JSON.stringify(Enquery));
                console.log(Enquery);
                $.ajax({
                    type: "POST",
                    url: "/CuttingSheets/CreateJson",
                    data: '{ enquery:' + JSON.stringify(Enquery) + ' }',
                    async: false,
                    success: function (r) {

                        if (Number.isInteger(r)) {
                            EnqueryId = r;
                        }
                        else {

                            if (confirm(r + ' do you whant to retry?')) {

                            } else {
                                window.location.href = "@Url.Action("Create", "CuttingSheets")";
                            }
                        }
                    }
                });


                if (Number.isInteger(EnqueryId) && EnqueryId > 0) {
                    var Details = new Array();
                    var i = 0;

                    var testnum = 0;
                    $("#tbDetails TBODY TR").each(function () {

                        var row = $(this);
                        var Detail = {};
                        var Confirmed = 0;
                        Detail.CuttingSheetId = EnqueryId;
                        i++;
                        $(this).closest('tr').find('input').each(function () {

                            if ($(this).attr("name") === "id") {
                                Detail.MaterialId = $(this).prop("value");

                            }
                            if ($(this).attr("name") === "Qty") {
                                Detail.qty = $(this).prop("value");

                            }

                        });

                        //$(this).closest('tr').find('select').each(function () {
                        //    if ($(this).attr("name") === "ProductId") {
                        //        Detail.MaterialId = $(this).val();
                        //        if (Detail.MaterialId == null) { testnum = 1; }
                        //    }

                        //});
                        Details.push(Detail);
                     });


                    if (testnum == 0) {
                        //Send the JSON array to Controller using AJAX.
                        $.ajax({
                            type: "POST",
                            url: "/CuttingSheets/CreateDetailsJson",
                            async: false,
                            data: JSON.stringify({ Details: Details }),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (r) {

                                if (r == "Cutting Sheet Saved Successfully") {
                                    window.location.href = "@Url.Action("Index", "CuttingSheets")";
                                }
                                else {
                                    if (confirm(r + ' do you whant to retry?')) {
                                        // Save it!
                                    } else {
                                        window.location.href = "@Url.Action("Index", "CuttingSheets")";
                                    }
                                }
                                // confirm("Press a button!");
                                //  alert(r + " record(s) inserted.");
                            }
                        });
                    } else { alert("number of skips or requested service not filled  "); }

                }
                else {
                    alert("Please, Enter data before save ");
                }
            }
        });
    </script>


    <script type="text/javascript">

        var popUpObj;

        function showModalPopUp(url) {

            popUpObj = window.open(url,

                "ModalPopUp",

                "toolbar=no," +

                "scrollbars=no," +

                "location=no," +

                "statusbar=no," +

                "menubar=no," +

                "resizable=0," +

                "width=800," +

                "height=460," +

                "left = 490," +

                "top=300"

            );

            popUpObj.focus();

            LoadModalDiv();

        }

    </script>

    <script type="text/javascript">

        function LoadModalDiv() {

            var bcgDiv = document.getElementById("divBackground");

            bcgDiv.style.display = "block";

            if (bcgDiv != null) {

                if (document.body.clientHeight > document.body.scrollHeight) {

                    bcgDiv.style.height = document.body.clientHeight + "px";

                }

                else {

                    bcgDiv.style.height = document.body.scrollHeight + "px";

                }

                bcgDiv.style.width = "100%";

            }

        }

    </script>
    <script type="text/javascript">

        function HideModalDiv() {

            var bcgDiv = document.getElementById("divBackground");

            bcgDiv.style.display = "none";

        }

    </script>

    <script>
        var getProjectId = function () {
            let id = document.getElementById("ProjectId").value
            return (id !== '' ? id : undefined);
        }

        var typeRequiredProject = function (projectId, type) {
            let typeRequiredProject = ["accessories", "acrylic", "edge band", "fabrication", "boards", "glass", "flooring", "carpets", "finished product"];
            if (projectId === undefined) {
                if (typeRequiredProject.includes(type.toLowerCase())) {
                    return true;
                }
            }
            return false
        }

        function insert_Row(material) {
            Sr = Sr + 1;

            let myVal = material.MaterialId, Name = material.Name, Unit = material.Unit.Name, Dinmension = "";
            let cat = material.MaterialCategory.Name;
            let type = material.MaterialType.Name;
            //global variable chenge on add/remove row from table
            nextRaw = nextRaw + 1;
            var tt = '<tr id="item_' + nextRaw + '">';

            tt = tt + '<td class="Name" > ' +
                '<div class="" > ' +
                Sr +
                '</div > ' +
                '</td > ';

            tt = tt + '<td class="Name" > ' +
                '<div class="" > ' +
                '<input type="text" name="id" id="id' + nextRaw + '"  class="form-control" value="' + myVal + '"/> ' +
                '</div > ' +
                '</td > ';

            tt = tt + '<td class="Name" > ' +
                '<div class="" > ' +
                '<input type="text" name="Name" id="Name' + nextRaw + '"  class="form-control" value="' + Name + '"/> ' +
                '</div > ' +
                '</td > ';

            tt = tt + '<td class="Name" > ' +
                '<div class="" > ' +
                '<input type="text" name="type" id="type' + nextRaw + '"  class="form-control" value="' + type + '"/> ' +
                '</div > ' +
                '</td > ';

            tt = tt + '<td class="Name" > ' +
                '<div class="" > ' +
                '<input type="text" name="Unit" id="Unit' + nextRaw + '"  class="form-control" value="' + Unit + '"/> ' +
                '</div > ' +
                '</td > ';

            tt = tt + '<td class="Qty" > ' +
                '<div class="" > ' +
                '<input type="text" name="Qty" id="Qty' + nextRaw + '"  class="form-control"/> ' +
                '</div > ' +
                '</td > ';

            tt = tt + ' <td>' +
                ' <div class="delete">' +
                '  <span id="c1" class="	glyphicon glyphicon-trash" onclick="remove(\'item_' + nextRaw + '\')"> </span>' +
                ' </div>' +
                ' </td>' +
                ' </tr>';


            let scntDiv = $('#p_scents');
            scntDiv.append(tt);

        }
    </script>
    <script>
        var Sr = 0;
        function setValue(material) {

            let type = material.MaterialType.Name;

            //check does type of material is allowed to be selected
            if (typeRequiredProject(getProjectId(), type)) {
                alert("type of material " + type + " not allowed to be picked without project ");
                return false;
            }

            insert_Row(material);


        }
    </script>

    <script src="~/Scripts/js/selectSearch/select2.min.js"></script>
    <script>
        $("#ProductId").select2({
            placeholder: "Select Material",
            allowClear: true
        });

        $("#ProjectId").select2({
            placeholder: "Select Project",
            allowClear: true
        });
    </script>
}
