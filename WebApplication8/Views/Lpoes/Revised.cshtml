@model WebApplication8.Models.Lpo

@{
    ViewBag.Title = "Edit";
}
<link href="~/Scripts/css/selectsearch/select2.min.css" rel="stylesheet" />

<h2>Revised Lpo</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "Lpoform" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.LpoId, new { htmlAttributes = new { @class = "form-control", @id = "LpoId" } })

    <div class="form-group">
        @Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SupplierRef, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SupplierRef, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SupplierRef, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LpoDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LpoDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LpoDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SupplierId, "SupplierId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreditTermId, "CreditTermId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CreditTermId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CreditTermId, "", new { @class = "text-danger" })
        </div>
    </div>





    <div class="form-group">
        @Html.LabelFor(model => model.SubTotal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SubTotal, new { htmlAttributes = new { @class = "form-control", id = "SubTotal", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.SubTotal, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", id = "Discount" } })
            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Total", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("Total", new { htmlAttributes = new { @class = "form-control", id = "Total", Value = 0, @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.SubTotal, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Vat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Vat, new { htmlAttributes = new { @class = "form-control", id = "Vat", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.GrandTotal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GrandTotal, new { htmlAttributes = new { @class = "form-control", id = "GrandTotal", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.GrandTotal, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="card-content">
            <b>
                <p class="control-label col-md-2">


                </p>
            </b>
            <div class="table-responsive">

                <table class="table-bordered table-responsive table dataTable text-nowrap" style="" id="tbDetails">
                    <thead>
                        <tr>


                            <td>
                                Sr #
                            </td>
                            <td>
                                id
                            </td>
                            <td>
                                Material
                            </td>
                            <td>
                                Dimension
                            </td>
                            <td>
                                Unit
                            </td>
                            <td>
                                Request Qty
                            </td>
                            @*<td>
                            Unit
                        </td>*@
                            <td>
                                Price
                            </td>
                            <td>
                                Total
                            </td>

                            <td>
                                delete
                            </td>
                        </tr>
                    </thead>
                    <tbody id="p_scents"></tbody>

                    <div style="float: left;padding-left:10%">
                        <span onclick="openChild()" class="btn-info">
                            Add Material
                        </span>
                        <input id="CustomerId" name="CustomerId" type="hidden" />
                        <div id="Customer"></div>

                    </div>
                </table>
                </div>
            </div>


            <div class="form-group" style="margin-top : 5px">
                <div class="col-md-offset-4 col-md-2">

                    <input type="button" id="btnSave" value="  Save  " class="btn btn-primary adminworkSaveBtn " />



                </div>

            </div>

        </div>

    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <!--Select Search-->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script src="~/Scripts/js/selectSearch/select2.min.js"></script>

        <!--Select Search-->

        <script>
            $("#SupplierId").select2({
                placeholder: "Select Supplier",
                allowClear: true
            });
        </script>


        <script>


        $(document).ready(function () {
            $("form").submit(function (e) {

                e.preventDefault(e);
            });
            var x = "@ViewBag.code"
            $("#code").val(x);

            ListDetails();

        });

        function validateForm() {
        }


        function openChild() {
            showModalPopUp('/Materials/IndexShort');

        }

        </script>




        <script>
            var scntDiv = $('#p_scents');
            var nextRaw = 0;

            function remove(rowId) {
                //Remove the TR element using JQuery's remove method.
                $('#' + rowId).fadeOut('slow', function () {
                    $('#' + rowId).remove();

                });
                nextRaw = nextRaw - 1;

                Sr = Sr - 1;
            }
        </script>


        <script>
        $("body").on("click", "#btnSave", function () {

            if (validateForm() != false) {
                //Loop through the Table rows and build a JSON array.
                //  var LpoHeader = new Array();
                var EnqueryId = 0;
                var Enquery = $('#Lpoform').serialize();
                console.log(Enquery);
                $.ajax({
                    type: "POST",
                    url: "/Lpoes/CreateJson",
                    data: '{ enquery:' + JSON.stringify(Enquery) + '}',
                    async: false,
                    success: function (r) {

                        if (Number.isInteger(r)) {
                            EnqueryId = r;
                        }
                        else {

                            if (confirm(r + ' do you whant to retry?')) {

                            } else {
                                window.location.href = "@Url.Action("Create", "lpoes")";
                            }
                        }
                    }
                });


                if (Number.isInteger(EnqueryId) && EnqueryId > 0) {
                    var Details = new Array();
                    var i = 0;

                    var testnum = 0;
                    $("#tbDetails TBODY TR").each(function () {

                        var row = $(this);
                        var Detail = {};
                        var Confirmed = 0;
                        Detail.LpoId = EnqueryId;
                        //alert(Detail.LpoId)
                        i++;
                        $(this).closest('tr').find('input').each(function () {

                            if ($(this).attr("name") === "id") {
                                Detail.MaterialId = $(this).prop("value");

                            }
                            if ($(this).attr("name") === "Qty") {
                                Detail.Qty = $(this).prop("value");

                            }

                            if ($(this).attr("name") === "Price") {
                                Detail.Price = $(this).prop("value");

                            }





                        });

                        //$(this).closest('tr').find('select').each(function () {
                        //    if ($(this).attr("name") === "ProductId") {
                        //        Detail.MaterialId = $(this).val();
                        //        if (Detail.MaterialId == null) { testnum = 1; }
                        //    }

                        //});
                        Details.push(Detail);
                     });


                    if (testnum == 0) {
                        //Send the JSON array to Controller using AJAX.
                        $.ajax({
                            type: "POST",
                            url: "/Lpoes/CreateDetailsJson",
                            async: false,
                            data: JSON.stringify({ Details: Details }),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (r) {

                                if (r == "Cutting Sheet Saved Successfully") {
                                    window.location.href = "@Url.Action("Index", "lpoes")";
                                }
                                else {
                                    if (confirm(r + ' do you whant to retry?')) {
                                        // Save it!
                                    } else {
                                        window.location.href = "@Url.Action("Index", "lpoes")";
                                    }
                                }
                                // confirm("Press a button!");
                                //  alert(r + " record(s) inserted.");
                            }
                        });
                    } else { alert("number of skips or requested service not filled  "); }

                }
                else {
                    alert("Please, Enter data before save ");
                }
            }
        });
        </script>


        <script type="text/javascript">

            var popUpObj;

            function showModalPopUp(url) {

                popUpObj = window.open(url,

                    "ModalPopUp",

                    "toolbar=no," +

                    "scrollbars=no," +

                    "location=no," +

                    "statusbar=no," +

                    "menubar=no," +

                    "resizable=0," +

                    "width=800," +

                    "height=460," +

                    "left = 490," +

                    "top=300"

                );

                popUpObj.focus();

                LoadModalDiv();

            }

        </script>

        <script type="text/javascript">

            function LoadModalDiv() {

                var bcgDiv = document.getElementById("divBackground");

                bcgDiv.style.display = "block";

                if (bcgDiv != null) {

                    if (document.body.clientHeight > document.body.scrollHeight) {

                        bcgDiv.style.height = document.body.clientHeight + "px";

                    }

                    else {

                        bcgDiv.style.height = document.body.scrollHeight + "px";

                    }

                    bcgDiv.style.width = "100%";

                }

            }

        </script>
        <script type="text/javascript">

            function HideModalDiv() {

                var bcgDiv = document.getElementById("divBackground");

                bcgDiv.style.display = "none";

            }

        </script>


        <script>
            var Sr = 0;
            function setValue(myVal, Name, Unit, Deminsion, Qty, Price) {
                //if (Qty == null) {qty=0}

                Qty = Qty || 0;
                Price = Price || 0;
                var total = Qty || 0 * Price || 0;

                if (total == null) { total = 0; }

                var current = $(".ClientId").length;

                var next = parseInt(current) + 1;
                var a = "DDlforLocationsClient" + next;
                var b = "span" + next;

                Sr = Sr + 1;


                //= $('#tbDetails tr').length;
                nextRaw = nextRaw + 1;
                var tt = '<tr id="item_' + nextRaw + '">';


                tt = tt + '<td class="Name" > ' +
                    '<div class="" > ' +
                    Sr +
                    '</div > ' +
                    '</td > ';

                tt = tt + '<td class="Name" > ' +
                    '<div class="" > ' +
                    '<input type="text" name="id" id="id' + nextRaw + '"  class="form-control" value="' + myVal + '"/> ' +
                    '</div > ' +
                    '</td > ';

                tt = tt + '<td class="Name" > ' +
                    '<div class="" > ' +
                    '<input type="text" name="Name" id="Name' + nextRaw + '"  class="form-control" value="' + Name + '"/> ' +
                    '</div > ' +
                    '</td > ';


                tt = tt + '<td class="Name" > ' +
                    '<div class="" > ' +
                    '<input type="text" name="Deminsion" id="Deminsion' + nextRaw + '"  class="form-control" value="' + Deminsion + '"/> ' +
                    '</div > ' +
                    '</td > ';

                tt = tt + '<td class="Name" > ' +
                    '<div class="" > ' +
                    '<input type="text" name="Unit" id="Unit' + nextRaw + '"  class="form-control" value="' + Unit + '"/> ' +
                    '</div > ' +
                    '</td > ';


                tt = tt + '<td class="Qty" > ' +
                    '<div class="" > ' +
                    '<input type="text" name="Qty" id="Qty' + nextRaw + '"  class="form-control" value="' + Qty + '"/> ' +
                    '</div > ' +
                    '</td > ';

                //tt = tt + '<td class="Name" > ' +
                //    '<div class="" > ' +
                //    '<input type="text" name="Unit2" id="Unit2' + nextRaw + '"  class="form-control" value="' + Unit + '"/> ' +
                //    '</div > ' +
                //    '</td > ';

                tt = tt + '<td class="Price" > ' +
                    '<div class="" > ' +
                    '<input type="text" name="Price" id="Price' + nextRaw + '"  class="form-control Price" onchange="PriceChange(nextRaw)" value="' + Price + '"/> ' +
                    '</div > ' +
                    '</td > ';

                tt = tt + '<td class="total" > ' +
                    '<div class="" > ' +
                    '<input type="text" name="total" id="total' + nextRaw + '"  class="form-control" onchange="TotalChange(nextRaw)"  value="' + total + '"/> ' +
                    '</div > ' +
                    '</td > ';



                tt = tt + ' <td>' +
                    ' <div class="delete">' +
                    '  <span id="c1" class="	glyphicon glyphicon-trash" onclick="remove(\'item_' + nextRaw + '\')"> </span>' +
                    ' </div>' +
                    ' </td>' +
                    ' </tr>';

                scntDiv.append(tt);


                var options = "";


            }
        </script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
        <script>







            $("#Discount").change(function () {

                var subTotal = $("#SubTotal").val();
                var Discount = $("#Discount").val();
                var t = subTotal - Discount
                $("#Total").val(t);


                var v = t * 0.05
                $("#Vat").val(v);





                var g = 0;
                g = t + v;

                $("#GrandTotal").val(g);

            });

            $("#SubTotal").change(function () {
                var subTotal = $("#SubTotal").val();
                var v = subTotal * 1.05
                $("#vat").val(v);



            });

            function PriceChange(i) {

                var qty = $("#Qty" + i).val();
                var price = $("#Price" + i).val();
                $("#total" + i).val(qty * price);

                TotalChange(i)

            };

            function TotalChange(i) {

                var subTotal = $("#SubTotal").val();

                var total = $("#total" + i).val();

                var x = parseInt(subTotal) + parseInt(total)
                $("#SubTotal").val(x);


                var Discount = $("#Discount").val();
                var t = x - parseInt(Discount)
                $("#Total").val(t);


                var v = t * 0.05
                $("#Vat").val(v);





                var g = 0;
                g = t + v;

                $("#GrandTotal").val(g);


            }



            function ListDetails() {

                lpoid = $("#LpoId").val();
                //alert(lpoid);
                $.ajax({
                    type: "GET",
                    traditional: true,
                    async: false,
                    cache: false,
                    url: '/Lpoes/LpoDetails',
                    context: JSON,
                    data: { "Lpoid": lpoid /* add other additional parameters */ },

                    //data: '{ enquery:' + JSON.stringify(Enquery) + '}',
                    success: function (result) {
                        result.forEach(element => setValue(element.MaterialId, element.Name, element.Unit, element.Dimension, element.Qty, element.Price));

                    },
                    error: function (xhr) {
                        //debugger;
                        console.log(xhr.responseText);
                        alert("Error has occurred..");
                    }
                });

            }
        </script>


        <script>
            $("#Discount").change(function () {

                var subTotal = $("#SubTotal").val();
                var Discount = $("#Discount").val();
                var t = subTotal - Discount
                $("#Total").val(t);


                var v = t * 0.05
                $("#Vat").val(v);





                var g = 0;
                g = t + v;

                $("#GrandTotal").val(g);

            });

            $("#SubTotal").change(function () {
                var subTotal = $("#SubTotal").val();
                var v = subTotal * 1.05
                $("#vat").val(v);



            });

            function PriceChange(i) {

                var qty = $("#Qty" + i).val();
                var price = $("#Price" + i).val();
                $("#total" + i).val(qty * price);

                TotalChange(i)

            };

            function TotalChange(i) {

                var subTotal = $("#SubTotal").val();

                var total = $("#total" + i).val();

                var x = parseInt(subTotal) + parseInt(total)
                $("#SubTotal").val(x);


                var Discount = $("#Discount").val();
                var t = x - parseInt(Discount)
                $("#Total").val(t);


                var v = t * 0.05
                $("#Vat").val(v);





                var g = 0;
                g = t + v;

                $("#GrandTotal").val(g);


            }
        </script>


    }
